apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

group 'com.monadiccloud.bindingz'

artifacts {
    archives jar
}

signing {
    sign configurations.archives
    useGpgCmd()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)

            groupId group
            artifactId rootProject.name
            version version

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            def mavenRepoUrl = "https://oss.sonatype.org"
            def releasesRepoUrl = "$mavenRepoUrl/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "$mavenRepoUrl/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Bindingz for Json Communication'
            name 'Bindingz for Json Communication'
            url 'https://github.com/cgoulding/bindingz-parent'
            organization {
                name group
                url 'https://github.com/cgoulding/bindingz-parent'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/cgoulding/bindingz-parent/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/cgoulding/bindingz-parent/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/cgoulding/bindingz-parent'
                connection 'scm:git:git://github.com/cgoulding/bindingz-parent.git'
                developerConnection 'scm:git:ssh://git@github.com:cgoulding/bindingz-parent.git'
            }
            developers {
                developer {
                    name 'cgoulding'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}